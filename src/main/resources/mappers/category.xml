<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="category">

	<parameterMap type="com.scglab.connect.services.category.CategoryLarge" id="categoryLarge"></parameterMap>
	<parameterMap type="com.scglab.connect.services.category.CategoryMiddle" id="categoryMiddle"></parameterMap>
	<parameterMap type="com.scglab.connect.services.category.CategorySmall" id="categorySmall"></parameterMap>
	
	<resultMap type="com.scglab.connect.services.category.CategoryLarge" id="categoryLarge"></resultMap>
	<resultMap type="com.scglab.connect.services.category.CategoryMiddle" id="categoryMiddle"></resultMap>
	<resultMap type="com.scglab.connect.services.category.CategorySmall" id="categorySmall"></resultMap>
	
	<!-- 카테고리 전체 조회 -->
	<select id="findAllCategory" parameterType="map" resultType="map">
		select a.id as categoryLargeId
				,a.name as categoryLargeName
				,b.id as categoryMiddleId
				,b.name as categoryMiddleName
				,c.id as categorySmallId
				,c.name as categorySmallName
		from category_large a
			 inner join category_middle b on (b.category_large_id = a.id and b.name is not null)
			 inner join category_small c on (c.category_middle_id  = b.id and c.name is not null)
		where 1=1
		and a.company_id  = #{companyId}
		and a.name is not null
		order by a.sort_index, b.sort_index, c.sort_index
	</select>

	<!-- 카테고리 대분류 목록 -->
	<select id="findCategoryLarge" parameterType="map" resultMap="categoryLarge">
		SELECT a.id,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.update_member_id as updateMemberId,
				a.company_id as companyId,
				a.name,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex
		FROM   category_large as a
		WHERE a.company_id = #{companyId}
		<if test='isMinwon == "Y"'>
			AND minwon_code IS NOT NULL
		</if>
		ORDER BY a.sort_index
	</select>
	
	<!-- 카테고리 대분류 상세 -->
	<select id="getCategoryLarge" parameterType="map" resultMap="categoryLarge">
		SELECT a.id,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.update_member_id as updateMemberId,
				a.company_id as companyId,
				a.name,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex
		FROM   category_large as a
		WHERE  id = #{id}
	</select>
	
	<!-- 카테고리 대분류 등록 -->
	<insert id="createCategoryLarge" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO category_large(company_id, name, minwon_code, minwon_name, update_member_id, sort_index)
		VALUES(#{companyId}, #{name}, #{minwonCode}, #{minwonName}, #{loginId}, #{sortIndex})
	</insert>
	
	<!-- 카테고리 대분류 수정 -->
	<update id="updateCategoryLarge" parameterType="map">
		UPDATE category_large 
		SET    name = #{name}, 
		       minwon_code = #{minwonCode}, 
		       minwon_name = #{minwonName}, 
		       update_member_id = #{loginId} 
		WHERE  id = #{id}
	</update>
	
	<!-- 카테고리 대분류 삭제 -->
	<delete id="deleteCategoryLarge" parameterType="map">
		DELETE FROM category_large
		WHERE  id = #{id}
	</delete>
	
	<!-- 카테고리 중분류 목록 -->
	<select id="findCategoryMiddle" parameterType="map" resultMap="categoryMiddle">
		SELECT a.id,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.update_member_id as updateMemberId,
				a.company_id as companyId,
				a.name,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex,
				a.category_large_id as categoryLargeId
		FROM   category_middle as a
		WHERE company_id = #{companyId}
		<if test='largeId != null and largeId != ""'>
			AND a.category_large_id = #{largeId}
		</if>
		<if test='isMinwon == "Y"'>
			AND minwon_code IS NOT NULL
		</if>
		ORDER BY a.sort_index
	</select>
	
	<!-- 카테고리 중분류 상세 -->
	<select id="getCategoryMiddle" parameterType="map" resultMap="categoryMiddle">
		SELECT a.id,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.update_member_id as updateMemberId,
				a.company_id as companyId,
				a.name,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex,
				a.category_large_id as categoryLargeId
		FROM   category_middle as a
		WHERE id = #{id}
	</select>
	
	<!-- 카테고리 중분류 등록 -->
	<insert id="createCategoryMiddle" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO category_middle(company_id, name, category_large_id, minwon_code, minwon_name, update_member_id, sort_index)
		VALUES(#{companyId}, #{name}, #{categoryLargeId}, #{minwonCode}, #{minwonName}, #{loginId}, #{sortIndex})
	</insert>
	
	<!-- 카테고리 중분류 수정 -->
	<update id="updateCategoryMiddle" parameterType="map">
		UPDATE category_middle 
		SET    name = #{name}, 
		           category_large_id = #{categoryLargeId},
		       minwon_code = #{minwonCode}, 
		       minwon_name = #{minwonName}, 
		       update_member_id = #{loginId} 
		WHERE  id = #{id}
	</update>
	
	<!-- 카테고리 중분류 삭제 -->
	<delete id="deleteCategoryMiddle" parameterType="map">
		DELETE FROM category_middle
		WHERE  id = #{id}
	</delete>
	
	<!-- 카테고리 소분류 목록 -->
	<select id="findCategorySmall" parameterType="map" resultMap="categorySmall">
		SELECT a.id,
				a.name,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.company_id as company_id,
				a.category_large_id as categoryLargeId,
				a.category_large_name as categoryLargeName,
				a.category_middle_id as categoryMiddleId,
				a.category_middle_name as categoryMiddleName,
				a.member_id as memberId,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex
		FROM v_category a
		WHERE company_id = #{companyId}
		<if test='isMinwon == "Y"'>
			AND minwon_code IS NOT NULL
		</if>
		<if test='middleId != null and middleId != ""'>
			AND a.category_middle_id = #{middleId}
		</if>
		ORDER BY a.sort_index
	</select>
	
	<!-- 카테고리 소분류 상세 -->
	<select id="getCategorySmall" parameterType="map" resultMap="categorySmall">
		SELECT a.id,
				a.name,
				DATE_FORMAT(a.create_date, '%Y-%m-%d') as createDate,
				DATE_FORMAT(a.update_date, '%Y-%m-%d') as updateDate,
				a.company_id as company_id,
				a.category_large_id as categoryLargeId,
				a.category_large_name as categoryLargeName,
				a.category_middle_id as categoryMiddleId,
				a.category_middle_name as categoryMiddleName,
				a.member_id as memberId,
				a.minwon_code as minwonCode,
				a.minwon_name as minwonName,
				a.sort_index as sortIndex
		FROM v_category a
		WHERE  id = #{id}
	</select>
	
	<!-- 카테고리 소분류 등록 -->
	<insert id="createCategorySmall" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO category_small(company_id, name, category_middle_id, minwon_code, minwon_name, update_member_id, sort_index)
		VALUES(#{companyId}, #{name}, #{categoryMiddleId}, #{minwonCode}, #{minwonName}, #{loginId}, #{sortIndex})
	</insert>
	
	<!-- 카테고리 소분류 수정 -->
	<update id="updateCategorySmall" parameterType="map">
		UPDATE category_small
		SET    name = #{name}, 
		       category_middle_id = #{categoryMiddleId},
		       minwon_code = #{minwonCode}, 
		       minwon_name = #{minwonName}, 
		       update_member_id = #{loginId} 
		WHERE  id = #{id}
	</update>
	
	<!-- 카테고리 소분류 삭제 -->
	<delete id="deleteCategorySmall" parameterType="map">
		DELETE FROM category_small
		WHERE  id = #{id}
	</delete>
	
	
	<select id="getLastLargeSortIndex" parameterType="map" resultType="int">
		SELECT IFNULL(MAX(sort_index), 0) + 1 as sort_index
		FROM   category_large 
		WHERE  company_id = #{companyId} 
	</select>
	
	<select id="getLastMiddleSortIndex" parameterType="map" resultType="int">
		SELECT IFNULL(MAX(sort_index), 0) + 1 as sort_index
		FROM   category_middle 
		WHERE  category_large_id = #{categoryLargeId} 
	</select>
	
	<select id="getLastSmallSortIndex" parameterType="map" resultType="int">
		SELECT IFNULL(MAX(sort_index), 0) + 1 as sort_index
		FROM   category_small 
		WHERE  category_middle_id = #{categoryMiddleId}
	</select>
	
	<update id="updateLargeSortIndex" parameterType="map">
		UPDATE category_large
		SET    sort_index = #{sortIndex}
		WHERE  id = #{id}
	</update>
	
	<update id="updateLargeSortIndexToAfter" parameterType="map">
		UPDATE category_large 
		SET    sort_index = sort_index + 1
		WHERE  company_id = #{companyId} 
		AND sort_index >= #{sortIndex}
	</update>
	
	<update id="updateMiddleSortIndex" parameterType="map">
		UPDATE category_middle
		SET    sort_index = #{sortIndex}
		WHERE  id = #{id}
	</update>
	
	<update id="updateMiddleSortIndexToAfter" parameterType="map">
		UPDATE category_middle 
		SET    sort_index = sort_index + 1
		WHERE  category_large_id = #{categoryLargeId} 
		AND sort_index >= #{sortIndex}  
	</update>
	
	<update id="updateSmallSortIndex" parameterType="map">
		UPDATE category_small
		SET    sort_index = #{sortIndex}
		WHERE  id = #{id}
	</update>
	
	<update id="updateSmallSortIndexToAfter" parameterType="map">
		UPDATE category_small 
		SET    sort_index = sort_index + 1 
		WHERE  category_middle_id = #{categoryMiddleId}
		AND sort_index >= #{sortIndex}
	</update>
	
	<!-- 카테고리 중분류(대분류 기준) -->
	<select id="findCategoryMiddleByLargeId" parameterType="map" resultMap="categoryMiddle">
		SELECT *
		FROM category_middle
		WHERE category_large_id = #{categoryLargeId}
		ORDER BY name ASC
	</select>
	
	<!-- 카테고리 소분류(소분류 기준) -->
	<select id="findCategorySmallByMiddleId" parameterType="map" resultMap="categorySmall">
		SELECT *
		FROM category_small
		WHERE category_middle_id = #{categoryMiddleId}
		ORDER BY name ASC
	</select>
	
	<!-- 민원코드를 통한 대분류 조회 -->
	<select id="findCategoryLargeByMinwonCode" parameterType="map" resultMap="categoryLarge">
		SELECT *
		FROM category_large
		WHERE minwon_code = #{code}
		AND company_id = #{companyId}
		limit 1
	</select>
	
	<!-- 민원코드를 통한 중분류 조회 -->
	<select id="findCategoryMiddleByMinwonCode" parameterType="map" resultMap="categoryMiddle">
		SELECT *
		FROM category_middle
		WHERE minwon_code = #{code}
		AND company_id = #{companyId}
		limit 1
	</select>
	
	<!-- 민원코드를 통한 소분류 조회 -->
	<select id="findCategorySmallByMinwonCode" parameterType="map" resultMap="categorySmall">
		SELECT *
		FROM category_small
		WHERE minwon_code = #{code}
		AND company_id = #{companyId}
		limit 1
	</select>
	
</mapper>