<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="manual">

	<parameterMap type="com.scglab.connect.services.manual.Manual" id="manual"></parameterMap>
	<resultMap type="com.scglab.connect.services.manual.Manual" id="manual"></resultMap>

	<!-- 등록된 매뉴얼의 태그목록 조회 -->
	<select id="findTagAll" parameterType="map" resultType="string">
		SELECT DISTINCT tags
		FROM  manual
		WHERE company_id = #{companyId}
		AND manual_index = #{manualIndex}
		AND tags != '' 
		AND tags IS NOT NULL
	</select>
	
	<!-- 매뉴얼 검색 -->
	<select id="findSearch" parameterType="map" resultMap="manual">
		SELECT f.id AS favorite_id,
			m.*,
			(
			  CASE WHEN f.member_id = #{loginId} THEN 1 ELSE 0 END
			) AS isFavorite
		FROM manual m
		LEFT OUTER JOIN manual_favorite f ON m.id = f.manual_id AND f.member_id = #{loginId}
		WHERE m.company_id = #{companyId}
		<if test='checkFavorite == "1"'>
			AND f.member_id = #{loginId}
		</if>
		
		<if test='searchValue != null and searchValue != ""'>
			AND (
				m.page_no = #{searchValue}
				OR
				m.title LIKE CONCAT('%', #{searchValue}, '%') 
				OR 
				m.content LIKE CONCAT('%', #{searchValue}, '%')
				OR 
				m.tags LIKE CONCAT('%', #{searchValue}, '%')
			)
		</if>
		<if test='tag != null and tag != ""'>
			AND m.tags LIKE CONCAT('%', #{tag}, '%')
		</if>
		AND m.manual_index = #{manualIndex}
		ORDER BY (m.page_no + 0)
		limit #{startNum}, #{pageSize}
				
	</select>
	
	<!-- 매뉴얼 상세 -->
	<select id="findManual" parameterType="map" resultMap="manual">
		SELECT m.*,
				(
				SELECT
					COUNT(1)
				FROM
					manual_favorite
				WHERE
					manual_id = m.id
					AND member_id = #{loginId}) as is_favorite,
				(
				SELECT
					MIN(id)
				FROM
					manual m2
				WHERE
					company_id = m.company_id
					AND manual_index = m.manual_index
					AND id <![CDATA[<]]> m.id) AS previous_page,
				(
				SELECT
					MIN(id)
				FROM
					manual m2
				WHERE
					company_id = 1
					AND manual_index = m.manual_index
					AND id > m.id) AS next_page
		FROM manual m
		WHERE m.company_id = #{companyId}
		AND m.id = #{id}
	</select>
	
	<!-- 매뉴얼 검색 카운트 -->
	<select id="findSearchCount" parameterType="map" resultType="int">
		SELECT COUNT(*) as total_count
		FROM manual m
		LEFT OUTER JOIN manual_favorite f ON m.id = f.manual_id AND f.member_id = #{loginId}
		WHERE m.company_id = #{companyId}
		
		<if test='checkFavorite == "1"'>
			AND f.member_id = #{loginId}
		</if>
		
		<if test='searchValue != null and searchValue != ""'>
			AND (
				m.page_no = #{searchValue}
				OR
				m.title LIKE CONCAT('%', #{searchValue}, '%') 
				OR 
				m.content LIKE CONCAT('%', #{searchValue}, '%')
				OR 
				m.tags LIKE CONCAT('%', #{searchValue}, '%')
			)
		</if>
		<if test='tag != null and tag != ""'>
			AND m.tags LIKE CONCAT('%', #{tag}, '%')
		</if>
		AND m.manual_index = #{manualIndex}
	</select>
	
	<!-- 다음 매뉴얼 -->
	<select id="NextManual" parameterType="map" resultMap="manual">
		SELECT *
		FROM manual
		WHERE company_id = #{companyId}
		AND page_number > #{pageNumber}
		ORDER BY page_number, id
		LIMIT 1
	</select>
	
	<!-- 매뉴얼 즐겨찾기 추가 -->
	<insert id="createFavorite" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO manual_favorite(company_id, manual_id, member_id)
		VALUES(#{companyId}, #{id}, #{loginId})
	</insert>
	
	<!-- 사용자가 즐겨찾기한 매뉴얼 삭제 -->
	<delete id="deleteFavoriteToMember" parameterType="map">
		DELETE
		FROM manual_favorite
		WHERE manual_id = #{id}
		AND member_id = #{loginId}
	</delete>
	
	<!-- 매뉴얼 등록 -->
	<insert id="create" parameterMap="manual" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO manual(company_id, update_member_id, manual_index, page_number, page_no, page_code, title, tags, content, pdf_image_path)
		VALUES(#{companyId}, #{loginId}, #{manualIndex}, #{pageNumber}, #{pageNo}, #{pageCode}, #{title}, #{tags}, #{content}, #{pdfImagePath})
	</insert>
	
	<!-- 매뉴얼 수정 -->
	<update id="update" parameterMap="manual">
		UPDATE manual
		SET update_member_id = #{loginId},
			page_no = #{pageNo},
			page_code = #{pageCode},
			title = #{title},
			tags = #{tags},
			content = #{content},
			pdf_image_path = #{pdfImagePath}
		WHERE id = #{id}
	</update>
	
	<!-- 매뉴얼 삭제 -->
	<delete id="delete" parameterType="map">
		DELETE 
		FROM manual
		WHERE id = #{id}
	</delete>
	
	<!-- 매뉴얼 즐겨찾기 삭제(매뉴얼 삭제시 딸려있는) -->
	<delete id="deleteFavoriteToManual">
		DELETE 
		FROM manual_favorite
		WHERE manual_id = #{id}
	</delete>	
	
	<select id="getNextPageNumber" parameterType="map" resultType="int">
		SELECT IFNULL(MAX(page_number), 0)  + 1 AS max_page_number 
		FROM   manual 
		WHERE  company_id = #{companyId} 
		AND manual_index = #{manualIndex} 
	</select>
	
</mapper>


