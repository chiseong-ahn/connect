<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="api.template">

	<parameterMap type="com.scglab.connect.services.template.Template" id="template"></parameterMap>
	<resultMap type="com.scglab.connect.services.template.Template" id="template"></resultMap>

	<!-- 답변템플릿 카운트 조회 -->
	<select id="selectCount" parameterType="map" resultType="int">
		select count(*) as cnt
		from Template t
			inner join v_cate c on t.catesm = c.id 
			left outer join TemplateFavorite f on t.id = f.template
		where t.cid = #{cid}
		
		<if test='type=="1"'>
		 	and t.emp = #{emp}
		</if>
		
		<if test='type=="2"'>
			and f.emp = #{emp}
		</if>
		
		<if test='catemd == "" and catelg != ""'>
			and c.catelg = #{catelg}
		</if>
		
		<if test='catesm == "" and catemd != ""'>
			and c.catemd = #{catemd}
		</if>
		
		<if test='catesm != ""'>
			and c.id = #{catesm}
		</if>
		
		<if test='keyword != "" and keyfield != ""'>
			<choose>
				<when test='keyfield == "ask"'>
					and t.ask like concat('%', #{keyword}, '%')
				</when>
				<when test='keyfield == "reply"'>
					and t.reply like concat('%', #{keyword}, '%')
				</when>
				<when test='keyfield == "keyword"'>
					and t.id in (
						select template
						from TemplateKeyword
						where keyword in (
							select id
							from Keyword
							where name = #{keyword}
						)
					)
				</when>
				<when test='keyfield == "empname"'>
					and t.emp in (
						select id
						from Emp
						where speaker in (
							select id
							from Speaker
							where cid = t.cid
							and name like concat('%', #{keyword}, '%') 
						)
					)
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 템플릿 목록 조회 -->
	<select id="selectAll" parameterType="map" resultMap="template">
		
		select  c.name as sname,
				c.catelg,
				c.lname,
				c.catemd,
				c.mname,
				(
					select group_concat(k.id)
					from TemplateKeyword tk
						inner join Keyword k on tk.keyword = k.id
					where tk.template = t.id
				) as arr_keywords,
				t.*,
				(
					case
						when f.emp = #{emp} then 1
						else 0
					end
				) as isfav
		from Template t
			inner join v_cate c on t.catesm = c.id 
			left outer join TemplateFavorite f on t.id = f.template
		where t.cid = #{cid}
		
		<if test='type=="my"'>
		 	and t.emp = #{emp}		-- 나의 답변템플릿 조건.
		</if>
		
		<if test='type=="favorite"'>
			and f.emp = #{emp}		-- 즐겨찾기 답변템플릿 조건.
		</if>
		
		<if test='catemd == "" and catelg != ""'>
			and c.catelg = #{catelg}
		</if>
		
		<if test='catesm == "" and catemd != ""'>
			and c.catemd = #{catemd}
		</if>
		
		<if test='catesm != ""'>
			and c.id = #{catesm}
		</if>
		
		<if test='keyword != "" and keyfield != ""'>
			<choose>
				<when test='keyfield == "ask"'>
					and t.ask like concat('%', #{keyword}, '%')
				</when>
				<when test='keyfield == "reply"'>
					and t.reply like concat('%', #{keyword}, '%')
				</when>
				<when test='keyfield == "keyword"'>
					and t.id in (
						select template
						from TemplateKeyword
						where keyword in (
							select id
							from Keyword
							where name = #{keyword}
						)
					)
				</when>
				<when test='keyfield == "empname"'>
					and t.emp in (
						select id
						from Emp
						where speaker in (
							select id
							from Speaker
							where cid = t.cid
							and name like concat('%', #{keyword}, '%') 
						)
					)
				</when>
			</choose>
		</if>
		order by t.id desc
		limit #{startNum}, #{endNum}
		
	</select>
	
	<!-- 템플릿 조회 -->
	<select id="selectOne" parameterType="map" resultMap="template">
		SELECT  vc.name AS category_small_name,
				vc.category_large_id AS category_large_id,
				vc.category_middle_id AS category_middle_id,
				vc.category_large_name AS category_large_name,
				vc.category_middle_name AS category_middle_name,
				t.*,
				(
					SELECT GROUP_CONCAT(keyword_id)
					FROM template_keyword
					WHERE template_id = 1 
				) AS keywordIds,
				(
					SELECT COUNT(1)
					FROM template_favorite
					WHERE template_id = t.id
					AND member_id = #{memberId}
				) AS is_favorite
		FROM template2 t
		LEFT OUTER JOIN v_category vc ON t.category_small_id = vc.id
		WHERE t.id = #{id}
	</select>
	
	<!-- 템플릿 등록 -->
	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
 		INSERT INTO template2 (company_id, category_small_id, ask, reply, link, link_protocol, image_path, image_name, member_id, update_member_id)
		VALUES (#{companyId}, #{categorySmallId}, #{ask}, #{reply}, #{link}, #{linkProtocol}, #{imagePath}, #{imageName}, #{loginId}, #{loginId})
	</insert>
	
	<!-- 템플릿 수정 -->
	<update id="update" parameterType="map">
		UPDATE template2 
		SET category_small_id = #{categorySmallId}, 
			member_id = #{loginId}, 
			ask = #{ask}, 
			reply = #{reply}, 
			link = #{link}, 
			image_path = #{imagePath}, 
			image_name = #{imageName},
			update_member_id = #{loginId}
		WHERE id = #{id}
	</update>
	
	<!-- 템플릿 삭제 -->
	<delete id="delete" parameterType="map">
		DELETE 
		FROM template2
		WHERE id = #{id}
	</delete>
	
	<!-- 즐겨찾기 등록 -->
	<insert id="saveFavorite" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO template_favorite(company_id, template_id, member_id)
		VALUES (#{companyId}, #{templateId}, #{loginId})
	</insert>
	
	<!-- 즐겨찾기 삭제 -->
	<delete id="deleteFavorite" parameterType="map">
		DELETE 
		FROM template_favorite
		WHERE template_id = #{templateId}
		AND member_id = #{loginId}
	</delete>
	
	<!-- 키워드 카운트 조회 -->
	<select id="selectCountKeyword" parameterType="map" resultType="int">
		select count(*) as cnt
		from Keyword k
		where 1=1
		and k.cid = #{cid}
		and k.name = #{name}
	</select>
	
	<!-- 템플릿 키워드 조회 -->
	<select id="selectKeyword" parameterType="map" resultType="map">
		SELECT *
		FROM  template_keyword
		WHERE id = #{id}
	</select>
	
	<!-- 템플릿 키워드 등록 -->
	<insert id="insertTemplateKeyword" parameterType="map" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO template_keyword(company_id, keyword_id, template_id, update_member_id)
        VALUES (#{companyId}, #{keywordId}, #{templateId}, #{loginId})
	</insert>
	
	<!-- 템플릿 키워드 삭제 -->
	<delete id="deleteTemplateKeywords" parameterType="map">
		DELETE 
		FROM template_keywword
		WHERE template_id = #{id}
	</delete>
</mapper>